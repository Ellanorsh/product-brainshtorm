from flask import Flask, request, jsonify, render_template_string
import os
import openai

app = Flask(__name__)
openai.api_key = os.environ.get("OPENAI_API_KEY")

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–æ—Ç–∞
bots = [
    {
        "bot_name": "–í–∏–∫–∞",
        "prompt": "–¢—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –∏ —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å, –Ω–∞–π—Ç–∏ –ø–æ–¥–∫—Ä–µ–ø–ª—è—é—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª–∏—Ç —É–ª—É—á—à–∏—Ç—å –∏–∑–Ω–∞—á–∞–ª—å–Ω—É—é –≥–∏–ø–æ—Ç–µ–∑—É."
    },
    {
        "bot_name": "–ù–∞—Å—Ç—è",
        "prompt": "–¢—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –∏ —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–∏—Ö –∏–ª–∏ –ø–æ—Ö–æ–∂–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, –≥–¥–µ —Ç–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ö–æ—Ä–æ—à–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞."
    },
    {
        "bot_name": "–ê—Ä—Ç—É—Ä",
        "prompt": "–¢—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ª–∏–¥–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∏ –æ—Ü–µ–Ω–∏—Ç—å –µ–≥–æ —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —Ä–µ–∞–ª–∏–∑—É–µ–º–æ—Å—Ç–∏ –∏ –¥–∞—Ç—å –æ—Ü–µ–Ω–∫—É –ø–æ —Ç—Ä–µ–±—É–µ–º—ã–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º —Ä–µ—Å—É—Ä—Å–∞–º (–Ω—É–∂–Ω—ã –ª–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–æ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –∫–∞–∫–∏—Ö –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è, –Ω—É–∂–Ω—ã –ª–∏ –¥–µ–≤–æ–ø—Å—ã, –¥–∏–∑–∞–π–Ω–µ—Ä—ã, –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ —Ç–¥)."
    },
    {
        "bot_name": "–°–≤–∞—Ç–∏",
        "prompt": "–¢—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫ –∏ —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∏ –ø—Ä–æ–¥—É–º–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ—Ä–Ω–µ—Ä –∫–µ–π—Å—ã –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å."
    },
    {
        "bot_name": "–õ–µ–Ω–∞",
        "prompt": "–¢—ã –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å, –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –ê—Ä—Ç—É—Ä–∞ –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –ø—Ä–æ–µ–∫—Ç–∞ (–ø—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–æ–∞–¥–º–∞–ø)."
    },
    {
        "bot_name": "–î–µ–Ω–∏—Å",
        "prompt": "–¢—ã –≤–µ–¥—É—â–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∏ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –¥–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—É—é –∫—Ä–∏—Ç–∏–∫—É, –∫–∞–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Ç—ã –≤–∏–¥–∏—à—å –≤ —ç—Ç–æ–º –∑–∞–ø—Ä–æ—Å–µ, –ø–æ—á–µ–º—É –æ–Ω –ø–ª–æ—Ö–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω, –ø–æ—á–µ–º—É –∏–¥–µ—è –Ω–µ–∂–∏–∑–Ω–µ—Å–ø–æ—Å–æ–±–Ω–∞, –ø–æ—á–µ–º—É —Ç–µ–∫—É—â–µ–µ —Ä–µ—à–µ–Ω–∏–µ —É–∂–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∏ –±–æ–ª–µ–µ —Ö–æ—Ä–æ—à–µ–µ."
    }
]

@app.route("/")
def home():
    return render_template_string("""
    <!DOCTYPE html>
    <html lang=\"en\">
    <head>
      <meta charset=\"UTF-8\">
      <title>Product Brainstorm</title>
    </head>
    <body>
      <h1>üí° –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤—É—é –∏–¥–µ—é</h1>
      <textarea id=\"idea\" rows=\"4\" cols=\"60\" placeholder=\"–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –∏–¥–µ—é –∑–¥–µ—Å—å...\"></textarea><br><br>
      <button onclick=\"sendIdea()\">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>

      <h2>–û—Ç–≤–µ—Ç—ã –±–æ—Ç–æ–≤:</h2>
      <div id=\"responses\"></div>

      <script>
        async function sendIdea() {
          const idea = document.getElementById("idea").value;
          const responseDiv = document.getElementById("responses");
          responseDiv.innerHTML = "‚è≥ –ò–¥—ë—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤...";

          const res = await fetch("/submit", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ idea })
          });

          const data = await res.json();
          responseDiv.innerHTML = data.map(bot => `
            <div>
              <strong>${bot.bot_name}</strong>:<br/>
              ${bot.answer}
              <hr/>
            </div>
          `).join("");
        }
      </script>
    </body>
    </html>
    """)

@app.route("/submit", methods=["POST"])
def submit():
    data = request.get_json()
    idea = data.get("idea")
    results = []

    for bot in bots:
        try:
            completion = openai.ChatCompletion.create(
                model="gpt-4o",
                messages=[
                    {"role": "system", "content": bot["prompt"]},
                    {"role": "user", "content": idea}
                ]
            )
            answer = completion.choices[0].message.content
        except Exception as e:
            answer = f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}"

        results.append({"bot_name": bot["bot_name"], "answer": answer})

    return jsonify(results)

if __name__ == "__main__":
    app.run(debug=True)
